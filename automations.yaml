#----------------------------------------------------------------------------------------------------
# Light Controls
- alias: Living Room Lamp On at Sunset
  id: lights1
  # Turns on the living Room Lights (formerly Lamp) shortly before sunset
  trigger:
  - event: sunset
    offset: -00:30:00
    platform: sun
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: light.living_room_light_bars
      state: 'on'
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: not
          conditions:
          - condition: state
            entity_id: media_player.living_room
            state: 'playing'
        - "{{ is_state('media_player.living_room','playing') and state_attr('media_player.living_room', 'source') != 'TV' }}"
      sequence:
      - service: scene.turn_on
        entity_id: scene.living_room_normal_lights_on
    default:
    - service: scene.turn_on
      entity_id: scene.tv_viewing_scene_no_turn_offs

- alias: Living Room Lamp Off at Bedtime
  id: lights2
  # Lamp turns off at night, but makes sure we're not listening to music or tv first
  trigger:
  - platform: template
    value_template: "{{ states.sensor.time.state == states.input_datetime.living_room_lights_off_time.state[0:5] }}"
  condition: 
    condition: not
    conditions:
      condition: or
      conditions:
      - condition: state
        entity_id: media_player.living_room
        state: 'playing'
      - condition: and
        conditions:
        - condition: state
          entity_id: group.peopleanyonehome
          state: not_home
        - condition: state
          entity_id: media_player.spotify_chris_moreno
          state: 'playing'
  action:
  - service: scene.turn_on
    entity_id: scene.living_room_normal_lights_off

- alias: Living Room Lamp Off Night After Media Off
  id: lights3
  # Lamp turns off a bit after turning off sonos/tv if it's after normal off-time
  trigger:
  - platform: state
    entity_id: media_player.living_room
    from: 'playing'
    to: 'paused'
    for: "00:15:00"
  - platform: state
    entity_id: media_player.living_room
    from: 'playing'
    to: 'idle'
    for: "00:15:00"
  condition: 
  - condition: time
    after: input_datetime.living_room_lights_off_time
    before: input_datetime.noisemaker_off_time
  - condition: state
    entity_id: light.living_room_light_bars
    state: 'on'
  - condition: not
    conditions:
    - condition: and
      conditions:
      - condition: state
        entity_id: group.peopleanyonehome
        state: not_home
      - condition: state
        entity_id: media_player.spotify_chris_moreno
        state: 'playing'
  action:
  - service: scene.turn_on
    entity_id: scene.living_room_normal_lights_off

- alias: Porch Lights On at Sunset
  id: lights4
  # Porch lights come on shortly before sunset
  trigger:
  - platform: state
    entity_id: sun.sun
    from: 'above_horizon'
    to: 'below_horizon'
  action:
  - service: switch.turn_on
    entity_id: switch.porch_lights   

- alias: Porch Lights Off at Sunrise
  id: lights5
  # Porch lights turn off at sunrise
  trigger:
  - platform: state
    entity_id: sun.sun
    from: 'below_horizon'
    to: 'above_horizon'
  action:
  - service: switch.turn_off
    entity_id: switch.porch_lights 

- alias: Patio Lights Turn On When Back Door Opens
  id: lights6
  # Turns on patio lights when back door opens at night
  trigger:
  - entity_id: binary_sensor.back_door
    from: 'off'
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id: light.patio_lights
    state: 'off'
  - condition: state
    entity_id: sun.sun
    state: 'below_horizon'
  action:
  - service: light.turn_on
    entity_id: light.patio_lights  

- alias: Bedroom Lamp On With Motion
  id: lights7
  # Turn on bedroom lamp when motion detected at night
  trigger:
  - entity_id: binary_sensor.bedroom_motion_occupancy
    platform: state
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: switch.noisemaker_plug
    state: 'off'  
  - condition: numeric_state
    entity_id: sensor.bedroom_motion_illuminance
    below: 1.5
  - condition: state
    entity_id: light.bedroom_lamp_cari
    state: 'off'
  action:
  - service: light.turn_on
    data:
      entity_id: light.bedroom_lamp_chris
      brightness: 51
      rgb_color: [255,255,255]

- alias: Kitchen Lights On With Motion
  id: lights8
  # Turn on island lights when motion detected at night
  trigger:
  - entity_id: binary_sensor.living_room_motion_occupancy
    platform: state
    from: 'off'
    to: 'on'
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: media_player.living_room
      state: 'playing'
  - condition: numeric_state
    entity_id: sensor.living_room_motion_illuminance
    below: 1.5
  - condition: state
    entity_id: light.all_living_room_dimmer_lights
    state: 'off'
  - condition: state
    entity_id: switch.kitchen_lights
    state: 'off'
  action:
  - service: light.turn_on
    data:
      entity_id: light.island_lights
      brightness: 51
      
- alias: Bedroom Lamp Off With No Motion
  id: lights9
  # Turn off bedroom lamp when motion is no longer detected 
  trigger:
  - entity_id: binary_sensor.bedroom_motion_occupancy
    platform: state
    from: 'on'
    to: 'off'
    for: 00:02:00
  - entity_id: switch.noisemaker_plug
    platform: state
    from: 'off'
    to: 'on'   
  condition:
  - condition: state
    entity_id: input_boolean.arm_alarm
    state: 'off'
  - condition: state
    entity_id: light.bedroom_lamp_cari
    state: 'off'
  - condition: state
    entity_id: light.bedroom_lamp_chris
    state: 'on'
  - condition: state
    entity_id: group.peopleanyonehome
    state: home 
  action:
  - service: light.turn_off
    entity_id: light.bedroom_lamp_chris

- alias: Kitchen Lights Off With No Motion
  id: lights10
  # Turn off island lights when no motion detected at night
  trigger:
  - entity_id: binary_sensor.living_room_motion_occupancy
    platform: state
    from: 'on'
    to: 'off'
    for: 00:05:00
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: media_player.living_room
      state: 'playing'
  - condition: state
    entity_id: light.can_lights_front_lr
    state: 'off'
  - condition: state
    entity_id: switch.kitchen_lights
    state: 'off'
  action:
  - service: light.turn_off
    entity_id: light.island_lights

- alias: Set Light Color to Album Art
  id: AlbumArtLights
  trigger:
  - platform: state
    entity_id: media_player.living_room
  condition:
  - condition: state
    entity_id: input_boolean.album_art_color_lights
    state: 'on'
  action:
  - service: color_extractor.turn_on
    data_template:
      color_extract_url: "http://10.0.0.26:8123{{ states.media_player.living_room.attributes.entity_picture }}.jpg"
      entity_id: light.tv_light_strip
      brightness: 128
      transition: 3
  - service: color_extractor.turn_on
    data_template:
      color_extract_url: "http://10.0.0.26:8123{{ states.media_player.living_room.attributes.entity_picture }}.jpg"
      entity_id: light.living_room_light_bars
      brightness: 128
      transition: 3
  - service: color_extractor.turn_on
    data_template:
      color_extract_url: "http://10.0.0.26:8123{{ states.media_player.living_room.attributes.entity_picture }}.jpg"
      entity_id: light.can_lights_front_lr
      brightness: 128
      transition: 3
  - service: color_extractor.turn_on
    data_template:
      color_extract_url: "http://10.0.0.26:8123{{ states.media_player.living_room.attributes.entity_picture }}.jpg"
      entity_id: light.can_light_front_center
      brightness: 25
      transition: 3

- alias: Away From Home Auto Actions Schedule A
  id: Lights12
# Engage automatic light behavior while away for security
  trigger:
  - platform: time
    at:
      - "17:07:05"
      - "18:39:03"
      - "20:19:00"
      - "22:13:00"
  condition: 
  - condition: state
    entity_id: group.peopleanyonehome
    state: not_home 
  - condition: time
    weekday:
      - mon
      - wed
      - fri
      - sun  
  action:
  - choose:
    - conditions:
      - condition: time
        before: "17:08:00"
        after: "17:05:00"
      sequence:
      - service: switch.turn_on
        entity_id: switch.kitchen_lights
    - conditions:
      - condition: time
        before: "18:40:03"
        after: "17:08:00"
      sequence:
      - service: switch.turn_off
        entity_id: 
        - switch.kitchen_lights
    - conditions:
      - condition: time
        before: "20:20:00"
        after: "18:40:03"
      sequence:
      - service: light.turn_on
        entity_id: light.bedroom_lamp_chris
    default:
    - service: light.turn_off
      entity_id: light.bedroom_lamp_chris

- alias: Away From Home Auto Actions Schedule B
  id: Lights13
# Engage automatic light behavior while away for security
  trigger:
  - platform: time
    at:
      - "17:23:05"
      - "19:09:03"
      - "20:32:00"
      - "22:22:00"
  condition: 
  - condition: state
    entity_id: group.peopleanyonehome
    state: not_home 
  - condition: time
    weekday:
      - tue
      - thu
      - sat  
  action:
  - choose:
    - conditions:
      - condition: time
        before: "17:24:00"
        after: "17:05:00"
      sequence:
      - service: switch.turn_on
        entity_id: switch.kitchen_lights
    - conditions:
      - condition: time
        before: "19:10:00"
        after: "17:25:00"
      sequence:
      - service: switch.turn_off
        entity_id: 
        - switch.kitchen_lights
    - conditions:
      - condition: time
        before: "20:33:00"
        after: "19:12:00"
      sequence:
      - service: light.turn_on
        entity_id: light.bedroom_lamp_chris
    default:
    - service: light.turn_off
      entity_id: light.bedroom_lamp_chris


#----------------------------------------------------------------------------------------------------
# Alarm Notifications
- alias: Actionable Notification Alarm Arm 
  id: Alarm1
  # After media off and alarm didn't auto-arm, because staying up late, send actionable notification
  trigger:
  - platform: state
    entity_id: media_player.living_room
    from: 'playing'
    to: 'paused'
  - platform: state
    entity_id: media_player.living_room
    from: 'playing'
    to: 'idle'
  - platform: state
    entity_id: media_player.spotify_chris_moreno
    from: 'playing'
    to: 'paused'
  - platform: state
    entity_id: media_player.spotify_chris_moreno
    from: 'playing'
    to: 'idle'
  condition: 
  - condition: template
    value_template: "{{ states.sensor.time.state > states.input_datetime.living_room_lights_off_time.state[0:5] }}" 
  - condition: state
    entity_id: input_boolean.arm_alarm
    state: 'off'
  action:
  - service: notify.notify_all_phones
    data_template:
      message: "Swipe Left->View (lockscreen) or Down (popup)"
      data:
        actions:
        - action: 'ARM_ALARM'
          title: 'Arm Alarm'
          activationMode: 'background'
          authenticationRequired: false
          destructive: false
          behavior: 'default'

- alias: Door Open Alarm Utility
  id: Alarm2
  # Door Open Alert Alarm/Critical Notification
  trigger:
  - platform: state
    entity_id: group.doors
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.arm_alarm
    state: 'on'
  action:
  - service: script.turn_on
    entity_id: script.phone_critical_alert
    data:
      variables:
        message: >
          {% if is_state('binary_sensor.utility_room_door', 'on') %}
            Utility Room Door Open
          {% elif is_state('binary_sensor.front_door', 'on') %}
            Front Door Open
          {% elif is_state('binary_sensor.back_door', 'on') %}
            Back Door Open
          {% elif is_state('binary_sensor.garage_side_door', 'on') %}
            Garage Side Door Open
          {% endif %}
        title: Door Open! 
  - service: scene.turn_on
    entity_id: scene.alarm_alert_scene
  - service: script.turn_on
    entity_id: script.sonos_say_to_all
    data:
      variables: 
        volume: 0.4
    data_template:
      variables:
        message: >
          {% if is_state('binary_sensor.utility_room_door', 'on') %}
            Utility Room Door Open
          {% elif is_state('binary_sensor.front_door', 'on') %}
            Front Door Open
          {% elif is_state('binary_sensor.back_door', 'on') %}
            Back Door Open
          {% elif is_state('binary_sensor.garage_side_door', 'on') %}
            Garage Side Door Open
          {% endif %} 
#- alias: Window Open basic Notification
#  # DEACTIVATED: Send phone notification anytime window sensor is tripped (for testing now)
#  trigger:
#  - platform: state
#    entity_id: group.windows
#    from: 'off'
#    to: 'on'
#  condition:
#  - condition: state
#    entity_id: input_boolean.bypass_workout_room
#    state: 'off'
#  action:
#  - service: script.turn_on
#    entity_id: script.phone_notification
#    data:
#      variables:
#        message: >
#          {% if is_state('binary_sensor.lumi_lumi_vibration_aq1_33a49d03_ias_zone', 'on') %}
#            Workout Room Window Sensor 
#          {% elif is_state('binary_sensor.lumi_lumi_vibration_aq1_8e959d03_ias_zone', 'on') %}
#            Guest Room Window Sensor
#          {% endif %}
#        title: Window Sensor Tripped 
#----------------------------------------------------------------------------------------------------
# Alarm Arm/Disarm Controls
- alias: Arm Alarm from Notification
  id: Alarm3
  # Actionable Notification Alarm Arm sends event that triggers this automation
  trigger:
    platform: event
    event_type: ios.notification_action_fired
    event_data:
      actionName: ARM_ALARM
  action:
  - data: {}
    entity_id: input_boolean.arm_alarm
    service: input_boolean.turn_on

- alias: Arm Alarm at Night
  id: Alarm4
  # Arm alarm at time set in UI, only fires if Living Room lights are off and Chris Spotify is not Playing at home
  trigger:
  - platform: template
    value_template: "{{ states.sensor.time.state == states.input_datetime.alarm_auto_arm_time.state[0:5] }}"
  condition:
  - condition: state
    entity_id: input_boolean.arm_alarm
    state: 'off'
  - condition: state
    entity_id: light.living_room_light_bars
    state: 'off'
  - condition: not
    conditions:
    - condition: state
      entity_id: media_player.spotify_chris_moreno
      state: 'playing'
  action:
  - data: {}
    entity_id: input_boolean.arm_alarm
    service: input_boolean.turn_on

- alias: Disarm Alarm in Morning
  id: Alarm5
  # Disarms alarm in the morning at time set in UI and reset Media Player volumes
  trigger:
  - platform: template
    value_template: "{{ states.sensor.time.state == states.input_datetime.alarm_auto_disarm_time.state[0:5] }}"
  condition:
  - condition: state
    entity_id: group.peopleanyonehome
    state: home  
  action:
  - data: {}
    entity_id: input_boolean.arm_alarm
    service: input_boolean.turn_off
  - service: media_player.volume_set
    data:
      entity_id: media_player.living_room
      volume_level: 0.27
  - service: media_player.volume_set
    data:
      entity_id: media_player.kitchen
      volume_level: 0.22
  - service: media_player.volume_set
    data:
      entity_id: media_player.Office
      volume_level: 0.17

- alias: Arm Alarm and Set TStat When Gone
  id: Alarm6
  # Arm alarm and set TStat to away when we're both away from home
  trigger:
  - entity_id: group.peopleanyonehome
    from: home
    platform: state
    to: not_home
  condition: 
  - condition: state
    entity_id: input_boolean.guest_in_house
    state: 'off'
  action:
  - data: {}
    entity_id: input_boolean.arm_alarm
    service: input_boolean.turn_on
  - data:
      preset_mode: Away
    entity_id: climate.thermostat
    service: climate.set_preset_mode

- alias: Out of Town Morning Tstat to Away
  id: Alarm7
  # Sets thermostat to away if still out of house in morning
  trigger:
  - platform: state
    entity_id: climate.thermostat
    attribute: preset_mode
    to: Home
  condition: 
  - condition: state
    entity_id: group.peopleanyonehome
    state: not_home  
  action:
  - entity_id: climate.thermostat
    service: climate.set_preset_mode
    data:
      preset_mode: Away
    
# - alias: Weekend and Holiday Thermostat Sleep Longer
  # Winter only for now, on Winter or Holiday don't turn on heat until noisemaker off
#  trigger:
#  - platform: state
#    entity_id: climate.thermostat
#    attribute: hvac_action
#    to: heating
#  - platform: state
#    entity_id: switch.noisemaker_plug
#    from: 'on'
#    to: 'off'
#  condition: 
#  - condition: state
#    entity_id: input_boolean.holiday
#    state: 'on'
#  - condition: time
#    weekday:
#    - sat
#    - sun
#  - condition: state
#    entity_id: climate.thermostat
#    attribute: preset_mode
#    state: Home
#  action:
#  - if:
#    - alias: "if noisemaker plug is on"
#      condition: state
#      entity_id: switch.noisemaker_plug
#      state: 'on' 
#  - then:
#    - alias: "then set the thermostat back to sleep"
#      service: climate.set_preset_mode
#      entity_id: climate.thermostat
#      data:
#        preset_mode: Sleep
#  - else:
#    - alias: "else go ahead and heat the house"
#      service: climate.set_preset_mode
#      entity_id: climate.thermostat
#      data:
#        preset_mode: Home

- alias: Disarm Alarm Set TStat When Anyone Returns
  id: Alarm8
  # Disarms alarm, runs TStat schedule when someone/anyone/all come home
  trigger:
  - entity_id: group.peopleanyonehome
    from: not_home
    platform: state
    to: home
    # Note the above group changes to home when either or both are home
  condition:
  - condition: state
    entity_id: input_boolean.arm_alarm
    state: 'on'
  - condition: state
    entity_id: switch.noisemaker_plug
    state: 'off'  
  action:
  - entity_id: input_boolean.arm_alarm
    service: input_boolean.turn_off
  - data:
      preset_mode: Home
    entity_id: climate.thermostat
    service: climate.set_preset_mode
  - service: lock.unlock
    data:
      entity_id: 
      - lock.utility_door_lock

- alias: Noisemaker On Arm Alarm and Turn Off Lights
  id: Alarm9
  # Arm alarm when noisemaker plug is switched on and turn off bedroom lights
  trigger:
  - entity_id: switch.noisemaker_plug
    from: 'off'
    platform: state
    to: 'on'
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.arm_alarm
        state: 'off'
      sequence:
      - entity_id: input_boolean.arm_alarm
        service: input_boolean.turn_on
      - service: light.turn_off
        entity_id: 
        - light.bedroom_lamp_chris
        - light.bedroom_lamp_cari
    default:
    - service: light.turn_off
      entity_id: 
      - light.bedroom_lamp_chris
      - light.bedroom_lamp_cari

- alias: Disarm Alarm When Any Door Unlocked
  id: Alarm10
  # Disarm alarm if any door is unlocked 
  trigger:
  - entity_id: group.locksanylocked
    from: locked
    platform: state
    to: unlocked
  - entity_id: group.locksalllocked
    from: locked
    platform: state
    to: unlocked
  condition:
  - condition: state
    entity_id: input_boolean.arm_alarm
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: climate.thermostat
        attribute: preset_mode
        state: Away
      sequence:
      - data:
          preset_mode: Home
        entity_id: climate.thermostat
        service: climate.set_preset_mode
      - entity_id: input_boolean.arm_alarm
        service: input_boolean.turn_off
    default:
    - entity_id: input_boolean.arm_alarm
      service: input_boolean.turn_off

- alias: Arm Alarm When Doors Locked
  id: Alarm11
  # Arms alarm when doors locked and noisemaker is on
  trigger:
  - entity_id: group.locksalllocked
    from: unlocked
    platform: state
    to: locked
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: input_boolean.arm_alarm
      state: 'off'
    - condition: state
      entity_id: switch.noisemaker_plug
      state: 'on'     
  action:
  - entity_id: input_boolean.arm_alarm
    service: input_boolean.turn_on

- alias: Arm Alarm When Guest Leaves Out Front
  id: Alarm12
  # Arms alarm when front door locked by guest and residents are away (or residents leave temporarily)
  trigger:
  - entity_id: lock.front_door_lock
    from: unlocked
    platform: state
    to: locked
    for: 00:00:05
  condition:
  - condition: or
    conditions:
    - condition: and
      conditions:
      - condition: state
        entity_id: input_boolean.arm_alarm
        state: 'off'
      - condition: state
        entity_id: group.peopleanyonehome
        state: not_home  
      - condition: state
        entity_id: sensor.front_door_lock_alarm_type
        state: '18'  
    - condition: and
      conditions:
      - condition: state
        entity_id: input_boolean.arm_alarm
        state: 'off'
      - condition: state
        entity_id: sensor.front_door_lock_alarm_type
        state: '18'  
      - condition: state
        entity_id: sensor.front_door_lock_alarm_level
        state: '1' 
      - condition: state
        entity_id: input_boolean.guest_in_house   
        state: 'off'
  action:
  - entity_id: input_boolean.arm_alarm
    service: input_boolean.turn_on
  - data:
      preset_mode: Away
    entity_id: climate.thermostat
    service: climate.set_preset_mode

- alias: Disarm Alarm When Second Person Returns Late
  id: Alarm13
  # Disarms alarm when one of us comes home after already armed
  trigger:
  - entity_id: group.peopleanyoneaway
    from: not_home
    platform: state
    to: home
  condition:
  - condition: state
    entity_id: input_boolean.arm_alarm
    state: 'on'
  action:
  - entity_id: input_boolean.arm_alarm
    service: input_boolean.turn_off

- alias: Lock Doors When Alarm Armed
  id: Alarm14
# Locks all doors when Alarm is Armed
  trigger:
  - entity_id: input_boolean.arm_alarm
    from: 'off'
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id: group.locksalllocked
    state: unlocked
  action:
  - service: lock.lock
    data:
      entity_id: 
      - lock.utility_door_lock
      - lock.front_door_lock
      
#----------------------------------------------------------------------------------------------------
# Various Comfort and Maintenance Controls

- alias: Turn On Living Room TV with Wake on LAN
  id: Media1
  trigger:
  - platform: webostv.turn_on
    entity_id: media_player.living_room_tv
  action:
  - service: wake_on_lan.send_magic_packet
    data:
      mac: 74:e6:b8:42:bd:5d

- alias: Turn TV On and Set Input
  id: Media2
  # Turn TV on and set input when music starts playing in living room
  trigger:
  - platform: state
    entity_id: media_player.living_room
    from: 'paused'
    to: 'playing'
    for: "00:00:10"
  - platform: state
    entity_id: media_player.living_room
    from: 'idle'
    to: 'playing'
    for: "00:00:10"
  condition: 
  - condition: and
    conditions:
    - condition: state
      entity_id: media_player.living_room_tv
      state: 'off'
    - "{{ state_attr('media_player.living_room', 'source') != 'TV'}}"
  action:
  - service: media_player.turn_on
    entity_id: media_player.living_room_tv
  - delay: "00:00:40"
  - service: media_player.select_source
    data:
      entity_id: media_player.living_room_tv
      source: 'Fire TV Stick'

- alias: Sonos EQ Adjust
  id: Media3
  # Set EQ on Living Room Sonos based on input source
  trigger:
  - platform: state
    entity_id: sensor.living_room_sonos_source
  action:
  - service: number.set_value
    target: 
      entity_id: number.living_room_bass
    data:
      value: >
        {% if is_state('sensor.living_room_sonos_source','TV') %}
          3
        {% elif is_state('sensor.living_room_sonos_source','Line-in') %}
          4
        {% else %}
          4
        {% endif %}   
  - service: number.set_value
    target: 
      entity_id: number.living_room_treble
    data:
      value: >
        {% if is_state('sensor.living_room_sonos_source','TV') %}
          3
        {% elif is_state('sensor.living_room_sonos_source','Line-in') %}
          5
        {% else %}
          2
        {% endif %} 

# Hue Remote Automation ----------------
- alias: Hue Remote On Button Single Click
  id: Switches1
  trigger:
  - device_id: fe8da2da4bc1f5dd21f8f4aca5373cbc
    domain: zha
    platform: device
    type: remote_button_short_press
    subtype: turn_on
  action:
  - service: scene.turn_on
    entity_id: scene.cooking_scene

- alias: Hue Remote On Button Long Click
  id: Switches2
  trigger:
  - device_id: fe8da2da4bc1f5dd21f8f4aca5373cbc
    domain: zha
    platform: device
    type: remote_button_long_press
    subtype: turn_on
  action:
  - data: {}
    entity_id: input_boolean.arm_alarm
    service: input_boolean.turn_on
  - data:
      variables:
        message: Alarm is armed
        sonos_entity: media_player.living_room
        volume: 0.4
    entity_id: script.sonos_say
    service: script.turn_on

- alias: Hue Remote On Button Double Click
  id: Switches3
  trigger:
  - device_id: fe8da2da4bc1f5dd21f8f4aca5373cbc
    domain: zha
    platform: device
    type: remote_button_double_press
    subtype: turn_on
  action:
  - service: scene.turn_on
    entity_id: scene.dinner_scene
  
- alias: Hue Remote Dim Up Button Single Click
  id: Switches4
  trigger:
  - device_id: fe8da2da4bc1f5dd21f8f4aca5373cbc
    domain: zha
    platform: device
    type: remote_button_short_press
    subtype: dim_up 
  action:
  - service: scene.turn_on
    entity_id: scene.tv_viewing_scene
    
- alias: Hue Remote Dim Up Button Long Press
  id: Switches5
  trigger:
  - device_id: fe8da2da4bc1f5dd21f8f4aca5373cbc
    domain: zha
    platform: device
    type: remote_button_long_press
    subtype: dim_up 
  action:
  - data: {}
    entity_id: input_boolean.arm_alarm
    service: input_boolean.turn_off
  - data:
      variables:
        message: Alarm is disarmed
        sonos_entity: media_player.living_room
        volume: 0.4
    entity_id: script.sonos_say
    service: script.turn_on

- alias: Hue Remote Dim Up Button Double click
  id: Switches6
  trigger:
  - device_id: fe8da2da4bc1f5dd21f8f4aca5373cbc
    domain: zha
    platform: device
    type: remote_button_double_press
    subtype: dim_up
  action:
  - service: scene.turn_on
    entity_id: scene.cleaning_scene
  
- alias: Hue Remote Dim Down Button Single Click
  id: Switches7
  trigger:
  - device_id: fe8da2da4bc1f5dd21f8f4aca5373cbc
    domain: zha
    platform: device
    type: remote_button_short_press
    subtype: dim_down
  action:
  - service: scene.turn_on
    entity_id: scene.living_room_normal_lights_on

- alias: Hue Remote Dim Down Button Long Press
  id: Switches8
  trigger:
  - device_id: fe8da2da4bc1f5dd21f8f4aca5373cbc
    domain: zha
    platform: device
    type: remote_button_long_press
    subtype: dim_down
  action:
  - service: scene.turn_on
    entity_id: scene.living_room_normal_lights_off

- alias: Hue Remote Off Button Double Click
  id: Switches9
  trigger:
  - device_id: fe8da2da4bc1f5dd21f8f4aca5373cbc
    domain: zha
    platform: device
    type: remote_button_double_press
    subtype: turn_off
  action:
  - service: scene.turn_on
    entity_id: scene.all_kitchen_lights_off
  
- alias: Hue Remote Off Button Long Press
  id: Switches10
  trigger:
  - device_id: fe8da2da4bc1f5dd21f8f4aca5373cbc
    domain: zha
    platform: device
    type: remote_button_long_press
    subtype: turn_off
  action:
  - service: scene.turn_on
    entity_id: scene.all_indoor_lights_off

# End Hue remote automation --------------

- alias: Noisemaker Turn Off
  id: Switches11
  # Noisemaker turns off at time set in UI (Also setup Sonos for morning speaker setup)
  trigger:
  - platform: template
    value_template: "{{ states.sensor.time.state == states.input_datetime.noisemaker_off_time.state[0:5] }}"
  condition:
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  - condition: state
    entity_id: input_boolean.holiday
    state: 'off'
  action:
  - entity_id: switch.noisemaker_plug
    service: switch.turn_off
  - service: media_player.join
    target:
      entity_id: media_player.office
    data:
      group_members: media_player.kitchen

#- alias: Noisemaker Turn On
#  Needs work, doesn't activate soon enough. Noisemaker turns on once TV is off in bedroom
#  trigger:
#  - platform: state
#    entity_id: media_player.bedroom
#    from: 'playing'
#    to: 'paused'
#    for: "00:02:00"
#  - platform: state
#    entity_id: media_player.bedroom
#    from: 'playing'
#    to: 'idle'
#    for: "00:02:00"
#  condition: 
#  - condition: time
#    after: '21:00:00'
#  action:
#  - entity_id: switch.noisemaker_plug
#    service: switch.turn_on
- alias: Camera Toggle With Alarm
  id: Switches12
#Toggles indoor cameras on-off in sync with Alarm Arm Switch
  trigger:
  - platform: state
    entity_id: input_boolean.arm_alarm
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: input_boolean.arm_alarm
    from: 'on'
    to: 'off'
  action:
    service_template: >
      {% if trigger.to_state.state == "on" %}
      switch.turn_on
      {% elif trigger.to_state.state == "off" %}
      switch.turn_off
      {% endif %}
    data_template: 
      entity_id: switch.camera_plug   

- alias: Thermostat Sleep with Alarm Arm
  id: Switches13
#Sets Thermostat preset = "Sleep" when alarm is armed at night and all are home
  trigger:
  - entity_id: input_boolean.arm_alarm
    from: 'off'
    platform: state
    to: 'on'
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: group.peopleanyonehome
      state: home
  action:
  - data:
      preset_mode: Sleep
    entity_id: climate.thermostat
    service: climate.set_preset_mode

- alias: Set Guest in House Status
  id: Switches14
  # Sets guest occupancy value based on front door lock activity type
  trigger:
  - entity_id: sensor.front_door_lock_alarm_type
    platform: state
    for: "00:00:05"
  condition:
  - condition: and
    conditions:
    - condition: not 
      conditions:
      - condition: state
        entity_id: sensor.front_door_lock_alarm_level
        state: '1'
        # Alarm level 1 shows when keypad is used and user code number 1 is used to unlock
    - condition: or
      conditions:
      - condition: state
        entity_id: sensor.front_door_lock_alarm_type
        state: '18'
        # 18 means locked with keypad, alarm level will be 0
      - condition: state
        entity_id: sensor.front_door_lock_alarm_type
        state: '19'
        # 19 means unlocked with keypad, alarm level will be user code number
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: sensor.front_door_lock_alarm_type
        state: '19'
      sequence:
      - service: input_boolean.turn_on 
        entity_id: input_boolean.guest_in_house
    default:
    - service: input_boolean.turn_off
      entity_id: input_boolean.guest_in_house    

- alias: Update Unlocked State From Alarm Type
  id: Switches15
# Updates Lock locked state because Alarm Type is more reliably pushed from Kwikset locks
  trigger:
  - entity_id: sensor.utility_door_lock_alarm_type
    platform: state
    to: '22'
  - entity_id: sensor.utility_door_lock_alarm_type
    platform: state
    to: '19'
  - entity_id: sensor.utility_door_lock_alarm_type
    platform: state
    to: '25'
  action:
  - service: python_script.set_state
    data_template:
      entity_id: lock.utility_door_lock
      state: unlocked

- alias: Update Locked State From Alarm Type
  id: Switches16
# Updates Lock to unlocked state because Alarm Type is more reliably pushed from Kwikset locks
  trigger:
  - entity_id: sensor.utility_door_lock_alarm_type
    platform: state
    to: '21'
  - entity_id: sensor.utility_door_lock_alarm_type
    platform: state
    to: '18'
  - entity_id: sensor.utility_door_lock_alarm_type
    platform: state
    to: '24'
  action:
  - service: python_script.set_state
    data_template:
      entity_id: lock.utility_door_lock
      state: locked

     
 
#----------------------------------------------------------------------------------------------------
# UI automation
- alias: Conditional Card Time-Based Toggle
  id: Switches17
  # Every minute, toggles input boolean to filtering cards in Lovelace while media playing (visualization)
  trigger:
  - platform: time_pattern
    minutes: "/5"
  action:
  - service: input_boolean.toggle
    entity_id: input_boolean.conditional_card_toggle  
  